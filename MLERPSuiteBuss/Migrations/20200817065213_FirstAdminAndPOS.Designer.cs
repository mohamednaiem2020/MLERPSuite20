// <auto-generated />
using System;
using MLERPSuiteBuss.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MLERPSuiteBuss.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200817065213_FirstAdminAndPOS")]
    partial class FirstAdminAndPOS
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminActor", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "ActorId");

                    b.ToTable("AdminActor");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminChart", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("ChartId")
                        .HasColumnType("int");

                    b.Property<string>("ChartCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChartId1")
                        .HasColumnType("int");

                    b.Property<int>("ChartIsLeaf")
                        .HasColumnType("int");

                    b.Property<int>("ChartLevelId")
                        .HasColumnType("int");

                    b.Property<int>("ChartLevelId1")
                        .HasColumnType("int");

                    b.Property<int>("ChartLevelId2")
                        .HasColumnType("int");

                    b.Property<int>("ChartLevelId3")
                        .HasColumnType("int");

                    b.Property<int>("ChartLevelId4")
                        .HasColumnType("int");

                    b.Property<int>("ChartLevelId5")
                        .HasColumnType("int");

                    b.Property<int>("ChartLevelId6")
                        .HasColumnType("int");

                    b.Property<int?>("ChartLevelId7")
                        .HasColumnType("int");

                    b.Property<int?>("ChartLevelTenantId")
                        .HasColumnType("int");

                    b.Property<int>("ChartParentId")
                        .HasColumnType("int");

                    b.Property<string>("ChartRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChartTenantId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "ChartId");

                    b.HasIndex("ChartLevelTenantId", "ChartLevelId7");

                    b.HasIndex("ChartTenantId", "ChartId1");

                    b.HasIndex("TenantId", "ChartLevelId");

                    b.HasIndex("TenantId", "ChartParentId");

                    b.ToTable("AdminChart");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminChartLevel", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("ChartLevelId")
                        .HasColumnType("int");

                    b.Property<byte>("ChartCodeLength")
                        .HasColumnType("tinyint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TenantId", "ChartLevelId");

                    b.ToTable("AdminChartLevel");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminCoding", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberLength")
                        .HasColumnType("int");

                    b.Property<string>("PrefixCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SplitCharcter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WFDocumentDocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentWorkFlowId")
                        .HasColumnType("int");

                    b.Property<int?>("WFMasterWorkFlowId")
                        .HasColumnType("int");

                    b.Property<string>("WithLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WithMonthYear")
                        .HasColumnType("int");

                    b.Property<int>("WithPrefix")
                        .HasColumnType("int");

                    b.Property<int>("WorkFlowId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "DocumentId");

                    b.HasIndex("WFMasterWorkFlowId");

                    b.HasIndex("TenantId", "WorkFlowId", "DocumentId");

                    b.HasIndex("WFDocumentTenantId", "WFDocumentWorkFlowId", "WFDocumentDocumentId");

                    b.ToTable("AdminCoding");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminCountry", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CountryId");

                    b.ToTable("AdminCountry");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminCurrency", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("DigitCount")
                        .HasColumnType("tinyint");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IsLocalCurrency")
                        .HasColumnType("tinyint");

                    b.HasKey("TenantId", "CurrencyId");

                    b.ToTable("AdminCurrency");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminLanguage", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IsRightToLeft")
                        .HasColumnType("int");

                    b.Property<string>("LanguageDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageId");

                    b.ToTable("AdminLanguage");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminModule", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminModuleModuleId")
                        .HasColumnType("int");

                    b.Property<byte>("IsDisabled")
                        .HasColumnType("tinyint");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleOrder")
                        .HasColumnType("int");

                    b.Property<string>("ModuleURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuleId");

                    b.HasIndex("AdminModuleModuleId");

                    b.ToTable("AdminModule");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminModuleScreen", b =>
                {
                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("ScreenId")
                        .HasColumnType("int");

                    b.HasKey("ModuleId", "ScreenId");

                    b.HasIndex("ScreenId");

                    b.ToTable("AdminModuleScreen");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminNationality", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int?>("AdminTenantTenantId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IsLocalNationality")
                        .HasColumnType("tinyint");

                    b.Property<string>("NationalityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantId", "NationalityId");

                    b.HasIndex("AdminTenantTenantId");

                    b.ToTable("AdminNationality");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminNotes", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<string>("NoteDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantId", "NoteId");

                    b.ToTable("AdminNotes");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminObject", b =>
                {
                    b.Property<int>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("IsFixedList")
                        .HasColumnType("tinyint");

                    b.Property<string>("ObjectDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObjectId");

                    b.ToTable("AdminObject");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminObjectLanguage", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("ObjectId")
                        .HasColumnType("int");

                    b.Property<int>("RowId")
                        .HasColumnType("int");

                    b.Property<int>("RowDescription")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "LanguageId", "ObjectId", "RowId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ObjectId");

                    b.ToTable("AdminObjectLanguage");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminPackage", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DemoForMonthCount")
                        .HasColumnType("int");

                    b.Property<byte>("IsFree")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("PackageMonthlyPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PackageYearlyPrice")
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("PackageId");

                    b.ToTable("AdminPackage");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminPackageModule", b =>
                {
                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("PackageId", "ModuleId");

                    b.HasIndex("ModuleId");

                    b.ToTable("AdminPackageModule");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminProvince", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.HasKey("ProvinceId");

                    b.HasIndex("CountryId");

                    b.ToTable("AdminProvince");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminRight", b =>
                {
                    b.Property<int>("RightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("RightId");

                    b.ToTable("AdminRight");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminScreen", b =>
                {
                    b.Property<int>("ScreenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("IsDisabled")
                        .HasColumnType("tinyint");

                    b.Property<string>("ModuleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModuleId1")
                        .HasColumnType("int");

                    b.Property<int>("RightId")
                        .HasColumnType("int");

                    b.Property<string>("ScreenIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScreenId1")
                        .HasColumnType("int");

                    b.Property<byte>("ScreenIsLeaf")
                        .HasColumnType("tinyint");

                    b.Property<int>("ScreenLevelId")
                        .HasColumnType("int");

                    b.Property<int>("ScreenLevelId1")
                        .HasColumnType("int");

                    b.Property<int>("ScreenLevelId2")
                        .HasColumnType("int");

                    b.Property<int>("ScreenLevelId3")
                        .HasColumnType("int");

                    b.Property<int>("ScreenLevelId4")
                        .HasColumnType("int");

                    b.Property<string>("ScreenMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScreenOrder")
                        .HasColumnType("int");

                    b.Property<int>("ScreenParentId")
                        .HasColumnType("int");

                    b.Property<string>("ScreenURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScreenId");

                    b.HasIndex("ModuleId1");

                    b.HasIndex("RightId");

                    b.HasIndex("ScreenId1");

                    b.HasIndex("ScreenLevelId");

                    b.ToTable("AdminScreen");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminScreenLanguage", b =>
                {
                    b.Property<int>("ScreenId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("LabelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScreenId", "LanguageId", "LabelId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AdminScreenLanguage");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminScreenLevel", b =>
                {
                    b.Property<int>("ScreenLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ScreenLevelId");

                    b.ToTable("AdminScreenLevel");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", b =>
                {
                    b.Property<int>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenantDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantId");

                    b.ToTable("AdminTenant");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenantLanguage", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TenantId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AdminTenantLanguage");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenantPackage", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<decimal>("LastPrice")
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("TenantId", "PackageId");

                    b.HasIndex("PackageId");

                    b.ToTable("AdminTenantPackage");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTown", b =>
                {
                    b.Property<int>("TownId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("TownId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("AdminTown");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminUser", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ChartId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IsAdmin")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsDisabled")
                        .HasColumnType("tinyint");

                    b.Property<string>("LoginUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantId", "UserId");

                    b.HasIndex("TenantId", "ChartId");

                    b.ToTable("AdminUser");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("WorkFlowId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<byte>("IsDisabled")
                        .HasColumnType("tinyint");

                    b.HasKey("TenantId", "WorkFlowId", "DocumentId");

                    b.HasIndex("WorkFlowId");

                    b.ToTable("AdminWFDocument");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFMaster", b =>
                {
                    b.Property<int>("WorkFlowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("ScreenId")
                        .HasColumnType("int");

                    b.HasKey("WorkFlowId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ScreenId");

                    b.ToTable("AdminWFMaster");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFProcess", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HeaderGuidId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StepStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("WFStepStatusTransStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("WFStepStepId")
                        .HasColumnType("int");

                    b.Property<int?>("WFStepTenantId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "StepId", "TransactionId");

                    b.HasIndex("WFStepStatusTransStatusId");

                    b.HasIndex("WFStepTenantId", "WFStepStepId");

                    b.ToTable("AdminWFProcess");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFStep", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int?>("ActorId1")
                        .HasColumnType("int");

                    b.Property<int?>("ActorTenantId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<byte>("IsFirstStep")
                        .HasColumnType("tinyint");

                    b.Property<int>("NextStepId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentDocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentWorkFlowId")
                        .HasColumnType("int");

                    b.Property<int?>("WFMasterWorkFlowId")
                        .HasColumnType("int");

                    b.Property<int?>("WFStepStepId")
                        .HasColumnType("int");

                    b.Property<int?>("WFStepTenantId")
                        .HasColumnType("int");

                    b.Property<int>("WorkFlowId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "StepId");

                    b.HasIndex("WFMasterWorkFlowId");

                    b.HasIndex("ActorTenantId", "ActorId1");

                    b.HasIndex("TenantId", "ActorId");

                    b.HasIndex("TenantId", "NextStepId");

                    b.HasIndex("WFStepTenantId", "WFStepStepId");

                    b.HasIndex("TenantId", "WorkFlowId", "DocumentId");

                    b.HasIndex("WFDocumentTenantId", "WFDocumentWorkFlowId", "WFDocumentDocumentId");

                    b.ToTable("AdminWFStep");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFTransList", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("WorkFlowId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentTransId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ErrorId")
                        .HasColumnType("int");

                    b.Property<Guid>("HeaderGuidId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TransStatusId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WFDocumentDocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentWorkFlowId")
                        .HasColumnType("int");

                    b.Property<int?>("WFTransStatusTransStatusId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "WorkFlowId", "CurrentTransId");

                    b.HasIndex("WFTransStatusTransStatusId");

                    b.HasIndex("WorkFlowId");

                    b.HasIndex("TenantId", "WorkFlowId", "DocumentId");

                    b.HasIndex("WFDocumentTenantId", "WFDocumentWorkFlowId", "WFDocumentDocumentId");

                    b.ToTable("AdminWFTransList");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFTransStatus", b =>
                {
                    b.Property<int>("TransStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("TransStatusId");

                    b.ToTable("AdminWFTransStatus");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWfStepAction", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("IsDisabled")
                        .HasColumnType("tinyint");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("WFStepStepId")
                        .HasColumnType("int");

                    b.Property<int?>("WFStepTenantId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "StepId", "ActionId");

                    b.HasIndex("WFStepTenantId", "WFStepStepId");

                    b.ToTable("AdminWfStepAction");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvCustomer", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<int>("BlockNo")
                        .HasColumnType("int");

                    b.Property<string>("BuildingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustEmail1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustFaxNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustFullAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustMobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustTelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlatNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("IsDisabled")
                        .HasColumnType("tinyint");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinceId1")
                        .HasColumnType("int");

                    b.Property<string>("StreetNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TownId")
                        .HasColumnType("int");

                    b.Property<int?>("TownId1")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "CustId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("ProvinceId1");

                    b.HasIndex("TownId");

                    b.HasIndex("TownId1");

                    b.ToTable("InvCustomer");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemCategory", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("CatIsLeaf")
                        .HasColumnType("tinyint");

                    b.Property<int>("CatLevelId")
                        .HasColumnType("int");

                    b.Property<int>("CatLevelId1")
                        .HasColumnType("int");

                    b.Property<int>("CatLevelId2")
                        .HasColumnType("int");

                    b.Property<int>("CatLevelId3")
                        .HasColumnType("int");

                    b.Property<int>("CatLevelId4")
                        .HasColumnType("int");

                    b.Property<int>("CatLevelId5")
                        .HasColumnType("int");

                    b.Property<int>("CatLevelId6")
                        .HasColumnType("int");

                    b.Property<int>("CatParentId")
                        .HasColumnType("int");

                    b.Property<string>("CatRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ItemCategoryCatId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCategoryLevelCatLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCategoryLevelTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCategoryTenantId")
                        .HasColumnType("int");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "CatId");

                    b.HasIndex("ItemCategoryLevelTenantId", "ItemCategoryLevelCatLevelId");

                    b.HasIndex("ItemCategoryTenantId", "ItemCategoryCatId");

                    b.HasIndex("TenantId", "CatLevelId");

                    b.HasIndex("TenantId", "CatParentId");

                    b.ToTable("InvItemCategory");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemCategoryLevel", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("CatLevelId")
                        .HasColumnType("int");

                    b.Property<int>("CatCodeLength")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TenantId", "CatLevelId");

                    b.ToTable("InvItemCategoryLevel");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemMaster", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("BaseToBigFactorCashed")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("BaseUnitIdCashed")
                        .HasColumnType("int");

                    b.Property<decimal>("BigToBaseFactorCashed")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("BigUnitIdCashed")
                        .HasColumnType("int");

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IsDisabled")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ItemCategoryCatId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCategoryTenantId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "ItemId");

                    b.HasIndex("ItemCategoryTenantId", "ItemCategoryCatId");

                    b.HasIndex("TenantId", "CatId");

                    b.ToTable("InvItemMaster");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnit", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FactorToBaseUnit")
                        .HasColumnType("decimal(18,6)");

                    b.Property<byte>("IsBaseUnit")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsDisabled")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ItemMasterItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemMasterTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitOfMeasureTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitOfMeasureUnitId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "ItemId", "UnitId");

                    b.HasIndex("ItemMasterTenantId", "ItemMasterItemId");

                    b.HasIndex("ItemUnitOfMeasureTenantId", "ItemUnitOfMeasureUnitId");

                    b.HasIndex("TenantId", "UnitId");

                    b.ToTable("InvItemUnit");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnitBarcode", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasColumnType("nchar(30)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitUnitId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "Barcode");

                    b.HasIndex("ItemUnitTenantId", "ItemUnitItemId", "ItemUnitUnitId");

                    b.HasIndex("TenantId", "ItemId", "UnitId");

                    b.ToTable("InvItemUnitBarcode");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnitMatrix", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UnitIdFrom")
                        .HasColumnType("int");

                    b.Property<int>("UnitIdTo")
                        .HasColumnType("int");

                    b.Property<decimal>("Factor")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("TenantId", "ItemId", "UnitIdFrom", "UnitIdTo");

                    b.HasIndex("TenantId", "ItemId", "UnitIdTo");

                    b.ToTable("InvItemUnitMatrix");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnitOfMeasure", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnitCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantId", "UnitId");

                    b.ToTable("InvItemUnitOfMeasure");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocation", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId1")
                        .HasColumnType("int");

                    b.Property<byte>("LocationIsLeaf")
                        .HasColumnType("tinyint");

                    b.Property<int>("LocationLevelId")
                        .HasColumnType("int");

                    b.Property<int>("LocationLevelId1")
                        .HasColumnType("int");

                    b.Property<int>("LocationLevelId2")
                        .HasColumnType("int");

                    b.Property<int>("LocationLevelId3")
                        .HasColumnType("int");

                    b.Property<int>("LocationLevelId4")
                        .HasColumnType("int");

                    b.Property<int>("LocationLevelId5")
                        .HasColumnType("int");

                    b.Property<int>("LocationLevelId6")
                        .HasColumnType("int");

                    b.Property<int?>("LocationLevelId7")
                        .HasColumnType("int");

                    b.Property<int?>("LocationLevelTenantId")
                        .HasColumnType("int");

                    b.Property<int>("LocationParentId")
                        .HasColumnType("int");

                    b.Property<string>("LocationRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationTenantId")
                        .HasColumnType("int");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<int?>("PriceHeaderPriceListId")
                        .HasColumnType("int");

                    b.Property<int?>("PriceHeaderTenantId")
                        .HasColumnType("int");

                    b.Property<int>("PriceListId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "LocationId");

                    b.HasIndex("LocationLevelTenantId", "LocationLevelId7");

                    b.HasIndex("LocationTenantId", "LocationId1");

                    b.HasIndex("PriceHeaderTenantId", "PriceHeaderPriceListId");

                    b.HasIndex("TenantId", "LocationLevelId");

                    b.HasIndex("TenantId", "LocationParentId");

                    b.HasIndex("TenantId", "PriceListId");

                    b.ToTable("InvLocation");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocationLevel", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("LocationLevelId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationCodeLength")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "LocationLevelId");

                    b.ToTable("InvLocationLevel");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSReturnDetails", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("ReturnInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("DetailsId")
                        .HasColumnType("int");

                    b.Property<Guid>("DetailsGuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitUnitId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("POSReturnHeaderReturnInvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("POSReturnHeaderTenantId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "ReturnInvoiceId", "DetailsId");

                    b.HasIndex("POSReturnHeaderTenantId", "POSReturnHeaderReturnInvoiceId");

                    b.HasIndex("ItemUnitTenantId", "ItemUnitItemId", "ItemUnitUnitId");

                    b.HasIndex("TenantId", "ItemId", "UnitId");

                    b.ToTable("InvPOSReturnDetails");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSReturnHeader", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("ReturnInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerCustId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerTenantId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HeaderGuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InvoiceIdRefernce")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId1")
                        .HasColumnType("int");

                    b.Property<int?>("LocationTenantId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<int>("POSReturnTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("POSSalesHeaderInvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("POSSalesHeaderTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("POSTerminalTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("POSTerminalTerminalId")
                        .HasColumnType("int");

                    b.Property<string>("ReturnInvoiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReturnInvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TerminalId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("WFDocumentDocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentWorkFlowId")
                        .HasColumnType("int");

                    b.Property<int?>("WFMasterWorkFlowId")
                        .HasColumnType("int");

                    b.Property<int>("WorkFlowId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "ReturnInvoiceId");

                    b.HasIndex("POSReturnTypeId");

                    b.HasIndex("WFMasterWorkFlowId");

                    b.HasIndex("CustomerTenantId", "CustomerCustId");

                    b.HasIndex("LocationTenantId", "LocationId1");

                    b.HasIndex("POSSalesHeaderTenantId", "POSSalesHeaderInvoiceId");

                    b.HasIndex("POSTerminalTenantId", "POSTerminalTerminalId");

                    b.HasIndex("TenantId", "CustId");

                    b.HasIndex("TenantId", "InvoiceIdRefernce");

                    b.HasIndex("TenantId", "LocationId");

                    b.HasIndex("TenantId", "TerminalId");

                    b.HasIndex("TenantId", "WorkFlowId", "DocumentId");

                    b.HasIndex("WFDocumentTenantId", "WFDocumentWorkFlowId", "WFDocumentDocumentId");

                    b.ToTable("InvPOSReturnHeader");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSReturnType", b =>
                {
                    b.Property<int>("InvPOSReturnTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("InvPOSReturnTypeId");

                    b.ToTable("InvPOSReturnType");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesDetails", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("DetailsId")
                        .HasColumnType("int");

                    b.Property<Guid>("DetailsGuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitUnitId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("POSSalesHeaderInvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("POSSalesHeaderTenantId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "InvoiceId", "DetailsId");

                    b.HasIndex("POSSalesHeaderTenantId", "POSSalesHeaderInvoiceId");

                    b.HasIndex("ItemUnitTenantId", "ItemUnitItemId", "ItemUnitUnitId");

                    b.HasIndex("TenantId", "ItemId", "UnitId");

                    b.ToTable("InvPOSSalesDetails");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesHeader", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerCustId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerTenantId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HeaderGuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InvPOSSalesTypeId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId1")
                        .HasColumnType("int");

                    b.Property<int?>("LocationTenantId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<int?>("POSTerminalTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("POSTerminalTerminalId")
                        .HasColumnType("int");

                    b.Property<int>("TerminalId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("WFDocumentDocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentWorkFlowId")
                        .HasColumnType("int");

                    b.Property<int?>("WFMasterWorkFlowId")
                        .HasColumnType("int");

                    b.Property<int>("WorkFlowId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "InvoiceId");

                    b.HasIndex("InvPOSSalesTypeId");

                    b.HasIndex("WFMasterWorkFlowId");

                    b.HasIndex("CustomerTenantId", "CustomerCustId");

                    b.HasIndex("LocationTenantId", "LocationId1");

                    b.HasIndex("POSTerminalTenantId", "POSTerminalTerminalId");

                    b.HasIndex("TenantId", "CustId");

                    b.HasIndex("TenantId", "LocationId");

                    b.HasIndex("TenantId", "TerminalId");

                    b.HasIndex("TenantId", "WorkFlowId", "DocumentId");

                    b.HasIndex("WFDocumentTenantId", "WFDocumentWorkFlowId", "WFDocumentDocumentId");

                    b.ToTable("InvPOSSalesHeader");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesPayment", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("POSReturnHeaderReturnInvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("POSReturnHeaderTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("POSSalesHeaderInvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("POSSalesHeaderTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("POSSalesPaymentMethodPaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("POSSalesPaymentMethodTenantId")
                        .HasColumnType("int");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ReturnVoucherRetId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "InvoiceId", "PaymentMethodId");

                    b.HasIndex("POSReturnHeaderTenantId", "POSReturnHeaderReturnInvoiceId");

                    b.HasIndex("POSSalesHeaderTenantId", "POSSalesHeaderInvoiceId");

                    b.HasIndex("POSSalesPaymentMethodTenantId", "POSSalesPaymentMethodPaymentMethodId");

                    b.HasIndex("TenantId", "PaymentMethodId");

                    b.HasIndex("TenantId", "ReturnVoucherRetId");

                    b.ToTable("InvPOSSalesPayment");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesPaymentMethod", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IsDisabled")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsKeyNet")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsMasterCard")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsVoucher")
                        .HasColumnType("tinyint");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethodCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethodRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantId", "PaymentMethodId");

                    b.ToTable("InvPOSSalesPaymentMethod");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesType", b =>
                {
                    b.Property<int>("InvPOSSalesTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("InvPOSSalesTypeId");

                    b.ToTable("InvPOSSalesType");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSTerminal", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("TerminalId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId1")
                        .HasColumnType("int");

                    b.Property<int?>("LocationTenantId")
                        .HasColumnType("int");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<string>("TerminalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminalRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantId", "TerminalId");

                    b.HasIndex("LocationTenantId", "LocationId1");

                    b.HasIndex("TenantId", "LocationId");

                    b.ToTable("InvPOSTerminal");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSZread", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("ZreadId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HeaderGuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InvoiceIdFrom")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceIdTo")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId1")
                        .HasColumnType("int");

                    b.Property<int?>("LocationTenantId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<int?>("POSTerminalTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("POSTerminalTerminalId")
                        .HasColumnType("int");

                    b.Property<int>("ReturnInvoiceIdFrom")
                        .HasColumnType("int");

                    b.Property<int>("ReturnInvoiceIdTo")
                        .HasColumnType("int");

                    b.Property<decimal>("ReturnNetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("TerminalId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.Property<int?>("UserTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentDocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("WFDocumentWorkFlowId")
                        .HasColumnType("int");

                    b.Property<int?>("WFMasterWorkFlowId")
                        .HasColumnType("int");

                    b.Property<int>("WorkFlowId")
                        .HasColumnType("int");

                    b.Property<string>("ZreadCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ZreadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TenantId", "ZreadId");

                    b.HasIndex("WFMasterWorkFlowId");

                    b.HasIndex("LocationTenantId", "LocationId1");

                    b.HasIndex("POSTerminalTenantId", "POSTerminalTerminalId");

                    b.HasIndex("TenantId", "LocationId");

                    b.HasIndex("TenantId", "TerminalId");

                    b.HasIndex("TenantId", "UserId");

                    b.HasIndex("UserTenantId", "UserId1");

                    b.HasIndex("TenantId", "WorkFlowId", "DocumentId");

                    b.HasIndex("WFDocumentTenantId", "WFDocumentWorkFlowId", "WFDocumentDocumentId");

                    b.ToTable("InvPOSZread");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSZreadDetails", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("ZreadId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("POSSalesPaymentMethodPaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("POSSalesPaymentMethodTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("POSZreadTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("POSZreadZreadId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "ZreadId", "PaymentMethodId");

                    b.HasIndex("POSSalesPaymentMethodTenantId", "POSSalesPaymentMethodPaymentMethodId");

                    b.HasIndex("POSZreadTenantId", "POSZreadZreadId");

                    b.HasIndex("TenantId", "PaymentMethodId");

                    b.ToTable("InvPOSZreadDetails");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPriceDetails", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("PriceListId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitTenantId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitUnitId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("PriceHeaderPriceListId")
                        .HasColumnType("int");

                    b.Property<int?>("PriceHeaderTenantId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "PriceListId", "ItemId", "UnitId");

                    b.HasIndex("PriceHeaderTenantId", "PriceHeaderPriceListId");

                    b.HasIndex("ItemUnitTenantId", "ItemUnitItemId", "ItemUnitUnitId");

                    b.HasIndex("TenantId", "ItemId", "UnitId");

                    b.ToTable("InvPriceDetails");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPriceHeader", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("PriceListId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<string>("PriceListCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceListRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantId", "PriceListId");

                    b.ToTable("InvPriceHeader");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminActor", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("Actors")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminChart", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("Charts")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminChartLevel", "ChartLevel")
                        .WithMany()
                        .HasForeignKey("ChartLevelTenantId", "ChartLevelId7");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminChart", "Chart")
                        .WithMany()
                        .HasForeignKey("ChartTenantId", "ChartId1");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminChartLevel", null)
                        .WithMany("Charts")
                        .HasForeignKey("TenantId", "ChartLevelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminChart", null)
                        .WithMany("Charts")
                        .HasForeignKey("TenantId", "ChartParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminChartLevel", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("ChartLevels")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminCoding", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("Codings")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFMaster", "WFMaster")
                        .WithMany("Codings")
                        .HasForeignKey("WFMasterWorkFlowId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", null)
                        .WithMany("Codings")
                        .HasForeignKey("TenantId", "WorkFlowId", "DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", "WFDocument")
                        .WithMany()
                        .HasForeignKey("WFDocumentTenantId", "WFDocumentWorkFlowId", "WFDocumentDocumentId");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminCurrency", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("Currencies")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminModule", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminModule", null)
                        .WithMany("Modules")
                        .HasForeignKey("AdminModuleModuleId");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminModuleScreen", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminModule", "Module")
                        .WithMany("ModuleScreens")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminScreen", "Screen")
                        .WithMany("ModuleScreens")
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminNationality", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", null)
                        .WithMany("Nationalities")
                        .HasForeignKey("AdminTenantTenantId");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminNotes", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("Notes")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminObjectLanguage", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminLanguage", "Language")
                        .WithMany("ObjectLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminObject", "Object")
                        .WithMany("ObjectLanguages")
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("ObjectLanguages")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminPackageModule", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminModule", "Module")
                        .WithMany("PackageModules")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminPackage", "Package")
                        .WithMany("PackageModule")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminProvince", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminCountry", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminScreen", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminModule", "Module")
                        .WithMany("Screens")
                        .HasForeignKey("ModuleId1");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminRight", "Right")
                        .WithMany("Screen")
                        .HasForeignKey("RightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminScreen", "Screen")
                        .WithMany("Screens")
                        .HasForeignKey("ScreenId1");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminScreenLevel", "ScreenLevel")
                        .WithMany("Screens")
                        .HasForeignKey("ScreenLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminScreenLanguage", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminLanguage", "Language")
                        .WithMany("ScreenLanguage")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminScreen", "Screen")
                        .WithMany("ScreenLanguage")
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenantLanguage", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminLanguage", "Language")
                        .WithMany("TenantLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("TenantLanguages")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenantPackage", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminPackage", "Package")
                        .WithMany("TenantPackage")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("TenantPackages")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTown", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminProvince", "Province")
                        .WithMany("Towns")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminUser", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("Users")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminChart", null)
                        .WithMany("Users")
                        .HasForeignKey("TenantId", "ChartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("WFDocuments")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFMaster", "WFMaster")
                        .WithMany("WFDocuments")
                        .HasForeignKey("WorkFlowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFMaster", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminModule", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminScreen", "Screen")
                        .WithMany("WFMaster")
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFProcess", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("WFProcesses")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFTransStatus", "WFStepStatus")
                        .WithMany()
                        .HasForeignKey("WFStepStatusTransStatusId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFStep", null)
                        .WithMany("WFProcesses")
                        .HasForeignKey("TenantId", "StepId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFStep", "WFStep")
                        .WithMany()
                        .HasForeignKey("WFStepTenantId", "WFStepStepId");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFStep", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("WFSteps")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFMaster", "WFMaster")
                        .WithMany("WFSteps")
                        .HasForeignKey("WFMasterWorkFlowId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminActor", "Actor")
                        .WithMany()
                        .HasForeignKey("ActorTenantId", "ActorId1");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminActor", null)
                        .WithMany("WFSteps")
                        .HasForeignKey("TenantId", "ActorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFStep", null)
                        .WithMany("WFSteps")
                        .HasForeignKey("TenantId", "NextStepId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFStep", "WFStep")
                        .WithMany()
                        .HasForeignKey("WFStepTenantId", "WFStepStepId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", null)
                        .WithMany("WFSteps")
                        .HasForeignKey("TenantId", "WorkFlowId", "DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", "WFDocument")
                        .WithMany()
                        .HasForeignKey("WFDocumentTenantId", "WFDocumentWorkFlowId", "WFDocumentDocumentId");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFTransList", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("WFTRansList")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFTransStatus", "WFTransStatus")
                        .WithMany("WFTransList")
                        .HasForeignKey("WFTransStatusTransStatusId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFMaster", "WFMaster")
                        .WithMany("WFTransList")
                        .HasForeignKey("WorkFlowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", null)
                        .WithMany("WFTransList")
                        .HasForeignKey("TenantId", "WorkFlowId", "DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", "WFDocument")
                        .WithMany()
                        .HasForeignKey("WFDocumentTenantId", "WFDocumentWorkFlowId", "WFDocumentDocumentId");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWfStepAction", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("WFStepAction")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFStep", null)
                        .WithMany("WFStepAction")
                        .HasForeignKey("TenantId", "StepId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFStep", "WFStep")
                        .WithMany()
                        .HasForeignKey("WFStepTenantId", "WFStepStepId");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvCustomer", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminProvince", null)
                        .WithMany("Customers")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminProvince", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId1");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("Customers")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTown", null)
                        .WithMany("Customers")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTown", "Town")
                        .WithMany()
                        .HasForeignKey("TownId1");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemCategory", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("ItemCategories")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemCategoryLevel", "ItemCategoryLevel")
                        .WithMany()
                        .HasForeignKey("ItemCategoryLevelTenantId", "ItemCategoryLevelCatLevelId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemCategory", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryTenantId", "ItemCategoryCatId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemCategoryLevel", null)
                        .WithMany("ItemCategories")
                        .HasForeignKey("TenantId", "CatLevelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemCategory", null)
                        .WithMany("ItemCategories")
                        .HasForeignKey("TenantId", "CatParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemCategoryLevel", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("ItemCategoryLevels")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemMaster", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("ItemMasters")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemCategory", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryTenantId", "ItemCategoryCatId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemCategory", null)
                        .WithMany("ItemMasters")
                        .HasForeignKey("TenantId", "CatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnit", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("ItemUnits")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemMaster", "ItemMaster")
                        .WithMany()
                        .HasForeignKey("ItemMasterTenantId", "ItemMasterItemId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnitOfMeasure", "ItemUnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("ItemUnitOfMeasureTenantId", "ItemUnitOfMeasureUnitId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemMaster", null)
                        .WithMany("ItemUnits")
                        .HasForeignKey("TenantId", "ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnitOfMeasure", null)
                        .WithMany("ItemUnits")
                        .HasForeignKey("TenantId", "UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnitBarcode", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("ItemUnitBarcodes")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnit", "ItemUnit")
                        .WithMany()
                        .HasForeignKey("ItemUnitTenantId", "ItemUnitItemId", "ItemUnitUnitId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnit", null)
                        .WithMany("ItemUnitBarcodes")
                        .HasForeignKey("TenantId", "ItemId", "UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnitMatrix", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("ItemUnitMaxtrixes")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnit", null)
                        .WithMany("ItemUnitMatrixesFrom")
                        .HasForeignKey("TenantId", "ItemId", "UnitIdFrom")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnit", null)
                        .WithMany("ItemUnitMatrixesTo")
                        .HasForeignKey("TenantId", "ItemId", "UnitIdTo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnitOfMeasure", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("ItemUnitOfMeasures")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocation", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("Locations")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocationLevel", "LocationLevel")
                        .WithMany()
                        .HasForeignKey("LocationLevelTenantId", "LocationLevelId7");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationTenantId", "LocationId1");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPriceHeader", "PriceHeader")
                        .WithMany()
                        .HasForeignKey("PriceHeaderTenantId", "PriceHeaderPriceListId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocationLevel", null)
                        .WithMany("Locations")
                        .HasForeignKey("TenantId", "LocationLevelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocation", null)
                        .WithMany("Locations")
                        .HasForeignKey("TenantId", "LocationParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPriceHeader", null)
                        .WithMany("Locations")
                        .HasForeignKey("TenantId", "PriceListId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocationLevel", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("LocationLevels")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSReturnDetails", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("POSReturnDetails")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSReturnHeader", "POSReturnHeader")
                        .WithMany()
                        .HasForeignKey("POSReturnHeaderTenantId", "POSReturnHeaderReturnInvoiceId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSReturnHeader", null)
                        .WithMany("POSReturnDetails")
                        .HasForeignKey("TenantId", "ReturnInvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnit", "ItemUnit")
                        .WithMany()
                        .HasForeignKey("ItemUnitTenantId", "ItemUnitItemId", "ItemUnitUnitId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnit", null)
                        .WithMany("POSReturnDetails")
                        .HasForeignKey("TenantId", "ItemId", "UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSReturnHeader", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSReturnType", "POSReturnType")
                        .WithMany("POSReturnHeaders")
                        .HasForeignKey("POSReturnTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("POSReturnHeaders")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFMaster", "WFMaster")
                        .WithMany("POSReturnHeaders")
                        .HasForeignKey("WFMasterWorkFlowId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvCustomer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerTenantId", "CustomerCustId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationTenantId", "LocationId1");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesHeader", "POSSalesHeader")
                        .WithMany()
                        .HasForeignKey("POSSalesHeaderTenantId", "POSSalesHeaderInvoiceId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSTerminal", "POSTerminal")
                        .WithMany()
                        .HasForeignKey("POSTerminalTenantId", "POSTerminalTerminalId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvCustomer", null)
                        .WithMany("POSReturnHeaders")
                        .HasForeignKey("TenantId", "CustId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesHeader", null)
                        .WithMany("POSReturnHeaders")
                        .HasForeignKey("TenantId", "InvoiceIdRefernce")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocation", null)
                        .WithMany("POSReturnHeaders")
                        .HasForeignKey("TenantId", "LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSTerminal", null)
                        .WithMany("POSReturnHeaders")
                        .HasForeignKey("TenantId", "TerminalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", null)
                        .WithMany("POSReturnHeaders")
                        .HasForeignKey("TenantId", "WorkFlowId", "DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", "WFDocument")
                        .WithMany()
                        .HasForeignKey("WFDocumentTenantId", "WFDocumentWorkFlowId", "WFDocumentDocumentId");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesDetails", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("POSSalesDetails")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesHeader", "POSSalesHeader")
                        .WithMany()
                        .HasForeignKey("POSSalesHeaderTenantId", "POSSalesHeaderInvoiceId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesHeader", null)
                        .WithMany("POSSalesDetails")
                        .HasForeignKey("TenantId", "InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnit", "ItemUnit")
                        .WithMany()
                        .HasForeignKey("ItemUnitTenantId", "ItemUnitItemId", "ItemUnitUnitId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnit", null)
                        .WithMany("POSSalesDetails")
                        .HasForeignKey("TenantId", "ItemId", "UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesHeader", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesType", "POSSalesType")
                        .WithMany("POSSalesHeaders")
                        .HasForeignKey("InvPOSSalesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("POSSalesHeaders")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFMaster", "WFMaster")
                        .WithMany("POSSalesHeaders")
                        .HasForeignKey("WFMasterWorkFlowId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvCustomer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerTenantId", "CustomerCustId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationTenantId", "LocationId1");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSTerminal", "POSTerminal")
                        .WithMany()
                        .HasForeignKey("POSTerminalTenantId", "POSTerminalTerminalId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvCustomer", null)
                        .WithMany("POSSalesHeaders")
                        .HasForeignKey("TenantId", "CustId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocation", null)
                        .WithMany("POSSalesHeaders")
                        .HasForeignKey("TenantId", "LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSTerminal", null)
                        .WithMany("POSSalesHeaders")
                        .HasForeignKey("TenantId", "TerminalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", null)
                        .WithMany("POSSalesHeaders")
                        .HasForeignKey("TenantId", "WorkFlowId", "DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", "WFDocument")
                        .WithMany()
                        .HasForeignKey("WFDocumentTenantId", "WFDocumentWorkFlowId", "WFDocumentDocumentId");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesPayment", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("POSSalesPayments")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSReturnHeader", "POSReturnHeader")
                        .WithMany()
                        .HasForeignKey("POSReturnHeaderTenantId", "POSReturnHeaderReturnInvoiceId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesHeader", "POSSalesHeader")
                        .WithMany()
                        .HasForeignKey("POSSalesHeaderTenantId", "POSSalesHeaderInvoiceId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesPaymentMethod", "POSSalesPaymentMethod")
                        .WithMany()
                        .HasForeignKey("POSSalesPaymentMethodTenantId", "POSSalesPaymentMethodPaymentMethodId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesHeader", null)
                        .WithMany("POSSalesPayments")
                        .HasForeignKey("TenantId", "InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesPaymentMethod", null)
                        .WithMany("POSSalesPayments")
                        .HasForeignKey("TenantId", "PaymentMethodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSReturnHeader", null)
                        .WithMany("POSSalesPayments")
                        .HasForeignKey("TenantId", "ReturnVoucherRetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesPaymentMethod", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("POSSalesPaymentMethods")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSTerminal", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("POSTerminals")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationTenantId", "LocationId1");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocation", null)
                        .WithMany("POSTerminals")
                        .HasForeignKey("TenantId", "LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSZread", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("POSZreads")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFMaster", "WFMaster")
                        .WithMany("POSZreads")
                        .HasForeignKey("WFMasterWorkFlowId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationTenantId", "LocationId1");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSTerminal", "POSTerminal")
                        .WithMany()
                        .HasForeignKey("POSTerminalTenantId", "POSTerminalTerminalId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvLocation", null)
                        .WithMany("POSZreads")
                        .HasForeignKey("TenantId", "LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSTerminal", null)
                        .WithMany("POSZreads")
                        .HasForeignKey("TenantId", "TerminalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminUser", null)
                        .WithMany("POSZreads")
                        .HasForeignKey("TenantId", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminUser", "User")
                        .WithMany()
                        .HasForeignKey("UserTenantId", "UserId1");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", null)
                        .WithMany("POSZreads")
                        .HasForeignKey("TenantId", "WorkFlowId", "DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminWFDocument", "WFDocument")
                        .WithMany()
                        .HasForeignKey("WFDocumentTenantId", "WFDocumentWorkFlowId", "WFDocumentDocumentId");
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSZreadDetails", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("POSZreadDetails")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesPaymentMethod", "POSSalesPaymentMethod")
                        .WithMany()
                        .HasForeignKey("POSSalesPaymentMethodTenantId", "POSSalesPaymentMethodPaymentMethodId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSZread", "POSZread")
                        .WithMany()
                        .HasForeignKey("POSZreadTenantId", "POSZreadZreadId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSSalesPaymentMethod", null)
                        .WithMany("POSZreadDetails")
                        .HasForeignKey("TenantId", "PaymentMethodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPOSZread", null)
                        .WithMany("POSZreadDetails")
                        .HasForeignKey("TenantId", "ZreadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPriceDetails", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("PriceDetails")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPriceHeader", "PriceHeader")
                        .WithMany()
                        .HasForeignKey("PriceHeaderTenantId", "PriceHeaderPriceListId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPriceHeader", null)
                        .WithMany("PriceDetails")
                        .HasForeignKey("TenantId", "PriceListId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnit", "ItemUnit")
                        .WithMany()
                        .HasForeignKey("ItemUnitTenantId", "ItemUnitItemId", "ItemUnitUnitId");

                    b.HasOne("MLERPSuiteBuss.Data.Models.Inventory.BE.InvItemUnit", null)
                        .WithMany("PriceDetails")
                        .HasForeignKey("TenantId", "ItemId", "UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MLERPSuiteBuss.Data.Models.Inventory.BE.InvPriceHeader", b =>
                {
                    b.HasOne("MLERPSuiteBuss.Data.Models.Admin.BE.AdminTenant", "Tenant")
                        .WithMany("PriceHeaders")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
